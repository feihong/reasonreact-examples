// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Js_mapperRt from "bs-platform/lib/es6/js_mapperRt.js";
import * as ReasonReact from "reason-react/src/legacy/ReasonReact.bs.js";
import * as ReactKawaii from "react-kawaii";

var jsMapperConstantArray = [
  [
    -326580162,
    "lovestruck"
  ],
  [
    -293737407,
    "shocked"
  ],
  [
    -281233442,
    "blissful"
  ],
  [
    23972,
    "ko"
  ],
  [
    5740566,
    "sad"
  ],
  [
    572482848,
    "happy"
  ],
  [
    691427738,
    "excited"
  ]
];

function moodToJs(param) {
  return Js_mapperRt.binarySearch(7, param, jsMapperConstantArray);
}

function moodFromJs(param) {
  return Js_mapperRt.revSearch(7, jsMapperConstantArray, param);
}

function MakeComponent(JC) {
  var make = function (mood, size, color, children) {
    var tmp = {};
    var tmp$1 = Belt_Option.map(mood, moodToJs);
    if (tmp$1 !== undefined) {
      tmp.mood = Caml_option.valFromOption(tmp$1);
    }
    if (size !== undefined) {
      tmp.size = Caml_option.valFromOption(size);
    }
    if (color !== undefined) {
      tmp.color = Caml_option.valFromOption(color);
    }
    return ReasonReact.wrapJsForReason(JC.reactClass, tmp, children);
  };
  return {
          make: make
        };
}

var JC = {
  reactClass: ReactKawaii.Backpack
};

function make(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC.reactClass, tmp, children);
}

var Backpack = {
  make: make
};

var JC$1 = {
  reactClass: ReactKawaii.Browser
};

function make$1(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$1.reactClass, tmp, children);
}

var Browser = {
  make: make$1
};

var JC$2 = {
  reactClass: ReactKawaii.CreditCard
};

function make$2(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$2.reactClass, tmp, children);
}

var CreditCard = {
  make: make$2
};

var JC$3 = {
  reactClass: ReactKawaii.Ghost
};

function make$3(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$3.reactClass, tmp, children);
}

var Ghost = {
  make: make$3
};

var JC$4 = {
  reactClass: ReactKawaii.IceCream
};

function make$4(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$4.reactClass, tmp, children);
}

var IceCream = {
  make: make$4
};

var JC$5 = {
  reactClass: ReactKawaii.Mug
};

function make$5(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$5.reactClass, tmp, children);
}

var Mug = {
  make: make$5
};

var JC$6 = {
  reactClass: ReactKawaii.Planet
};

function make$6(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$6.reactClass, tmp, children);
}

var Planet = {
  make: make$6
};

var JC$7 = {
  reactClass: ReactKawaii.SpeechBubble
};

function make$7(mood, size, color, children) {
  var tmp = {};
  var tmp$1 = Belt_Option.map(mood, moodToJs);
  if (tmp$1 !== undefined) {
    tmp.mood = Caml_option.valFromOption(tmp$1);
  }
  if (size !== undefined) {
    tmp.size = Caml_option.valFromOption(size);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  return ReasonReact.wrapJsForReason(JC$7.reactClass, tmp, children);
}

var SpeechBubble = {
  make: make$7
};

export {
  moodToJs ,
  moodFromJs ,
  MakeComponent ,
  Backpack ,
  Browser ,
  CreditCard ,
  Ghost ,
  IceCream ,
  Mug ,
  Planet ,
  SpeechBubble ,
  
}
/* JC Not a pure module */
