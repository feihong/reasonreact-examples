// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Prelude$ReasonreactExamples from "../Prelude.bs.js";

var component = Curry._1(Prelude$ReasonreactExamples.RR.statelessComponent, "Select-ReasonreactExamples");

function make(value, items, classNameOpt, onChangeOpt, _children) {
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var onChange = onChangeOpt !== undefined ? onChangeOpt : Prelude$ReasonreactExamples.noOp;
  return {
          debugName: component.debugName,
          reactClassInternal: component.reactClassInternal,
          handedOffState: component.handedOffState,
          willReceiveProps: component.willReceiveProps,
          didMount: component.didMount,
          didUpdate: component.didUpdate,
          willUnmount: component.willUnmount,
          willUpdate: component.willUpdate,
          shouldUpdate: component.shouldUpdate,
          render: (function (_self) {
              return React.createElement("select", {
                          className: Cn.$plus("border", className),
                          value: Belt_Option.mapWithDefault(Caml_option.undefined_to_opt(items.find(function (item) {
                                        return Caml_obj.caml_equal(item.value, value);
                                      })), "", (function (item) {
                                  return item.label;
                                })),
                          onChange: (function (evt) {
                              var label = evt.target.value;
                              Belt_Option.map(Caml_option.undefined_to_opt(items.find(function (item) {
                                            return item.label === label;
                                          })), (function (item) {
                                      return Curry._1(onChange, item.value);
                                    }));
                              
                            })
                        }, Belt_Array.map(items, (function (item) {
                                return React.createElement("option", {
                                            key: item.label,
                                            value: item.label
                                          }, Prelude$ReasonreactExamples.s(item.label));
                              })));
            }),
          initialState: component.initialState,
          retainedProps: component.retainedProps,
          reducer: component.reducer,
          jsElementWrapped: component.jsElementWrapped
        };
}

export {
  component ,
  make ,
  
}
/* component Not a pure module */
