// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as RR$ReasonreactExamples from "../RR.bs.js";
import * as Button$ReasonreactExamples from "../widgets/Button.bs.js";
import * as Twemoji$ReasonreactExamples from "../bindings/Twemoji.bs.js";
import * as Emojilib$ReasonreactExamples from "../bindings/Emojilib.bs.js";

var w = "48px";

var imgStyle = RR$ReasonreactExamples.makeStyle(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, w, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, w, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);

function Emojis$Example(Props) {
  var match = RR$ReasonreactExamples.useStateValue([]);
  var setEmojis = match[1];
  var emojis = match[0];
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "text-xs mb-4"
                }, RR$ReasonreactExamples.s("(Images from Twemoji)")), React.createElement("div", {
                  className: "mb-4"
                }, React.createElement(Button$ReasonreactExamples.make, {
                      onClick: (function (param) {
                          return Curry._1(setEmojis, emojis.concat(Emojilib$ReasonreactExamples.getRandom(undefined)));
                        }),
                      children: RR$ReasonreactExamples.s("Add")
                    }), React.createElement(Button$ReasonreactExamples.make, {
                      onClick: (function (param) {
                          return Curry._1(setEmojis, []);
                        }),
                      children: RR$ReasonreactExamples.s("Clear")
                    })), React.createElement("div", undefined, Belt_Array.mapWithIndex(emojis, (function (index, emoji) {
                        return React.createElement("div", {
                                    key: String(index),
                                    className: "inline flex flex-col border items-center"
                                  }, React.createElement("span", {
                                        className: "mb-1"
                                      }, RR$ReasonreactExamples.s(emoji.name), RR$ReasonreactExamples.s(" => "), RR$ReasonreactExamples.s(emoji.category), emoji.fitzpatrick_scale ? RR$ReasonreactExamples.s(" (fitzpatrick scale)") : null), React.createElement("div", {
                                        className: "flex content-center"
                                      }, React.createElement("span", {
                                            className: "text-5xl mr-4"
                                          }, RR$ReasonreactExamples.s(emoji.char)), React.createElement("img", {
                                            style: imgStyle,
                                            src: Twemoji$ReasonreactExamples.emojiUrl(emoji.char)
                                          })));
                      }))));
}

var Example = {
  make: Emojis$Example
};

function render(param) {
  return React.createElement(Emojis$Example, {});
}

var title = "Emoji Generator";

export {
  title ,
  imgStyle ,
  Example ,
  render ,
  
}
/* imgStyle Not a pure module */
